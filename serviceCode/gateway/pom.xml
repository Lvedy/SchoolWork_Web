<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.example</groupId>
        <artifactId>cloudDemo</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>gateway</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <!-- 项目公共模块依赖，封装了通用工具类、实体类等公共组件 -->
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>common</artifactId>
            <version>1.0-SNAPSHOT</version>


            <exclusions>
                <!-- 排除Spring Web MVC依赖，避免与WebFlux产生冲突 -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Spring Cloud Gateway网关核心依赖，用于实现API路由、请求过滤等功能 -->
        <!-- 基于WebFlux构建，提供非阻塞、高性能的API网关能力 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>

        <!-- Spring WebFlux响应式编程依赖，提供非阻塞的Reactive API -->
        <!-- 与传统的Spring MVC不同，WebFlux基于Reactor模式，适合构建高性能、低延迟的微服务 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>


        <!-- Nacos服务注册与发现依赖，用于实现微服务的自动注册与发现 -->
        <!-- 服务启动时会自动将自己注册到Nacos服务器，同时可以从Nacos获取其他服务的实例信息 -->
        <!--        注册中心-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>


        <!-- Nacos配置中心依赖，用于实现微服务的外部化配置管理 -->
        <!-- 支持配置的动态刷新，无需重启服务即可应用新配置 -->
        <!--    配置中心-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>


    </dependencies>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--用于替换resources里的变量-->
                <filtering>true</filtering>
            </resource>
        </resources>


        <plugins>
            <!-- 资源插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>utf-8</encoding>
                    <!-- 使Spring Boot支持${}占位符 -->
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
            </plugin>

            <!-- Spring Boot打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                    <!-- 打包包含本地jar包-->
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 跳过测试插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <!--                    跳过测试-->
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>


        </plugins>
    </build>
</project>